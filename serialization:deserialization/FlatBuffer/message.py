# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class message(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsmessage(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = message()
        x.Init(buf, n + offset)
        #print(x)
        #print(n)
        return x

    # message
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # message
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # message
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # message
    def Mesage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        print(o)
        if o != 0:
            return self._tab.String(o + self._tab.Pos)

        return None

    # message
    def Usr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .User import User
            obj = User()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # message
    def Senderid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def messageStart(builder): builder.StartObject(5)
def messageAddId(builder, id): builder.PrependInt64Slot(0, id, 0)
def messageAddName(builder, name): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)
def messageAddMesage(builder, mesage): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(mesage), 0)
def messageAddUsr(builder, usr): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(usr), 0)
def messageAddSenderid(builder, senderid): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(senderid), 0)
def messageEnd(builder): return builder.EndObject()
